Day 1: 386 || Lexicographical Number

--->Question:

Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.

You must write an algorithm that runs in O(n) time and uses O(1) extra space. 

 

Example 1:

Input: n = 13
Output: [1,10,11,12,13,2,3,4,5,6,7,8,9]
Example 2:

Input: n = 2
Output: [1,2]
 

Constraints:

1 <= n <= 5 * 104

--->solution:

class Solution {
    public List<Integer> lexicalOrder(int n) {
        Comparator<Integer> comp = new Comparator<Integer>(){
            public int compare(Integer i,Integer ii){
                String si = Integer.toString(i);
                String sii = Integer.toString(ii);
                return si.compareTo(sii);
            }
        };
        ArrayList<Integer> nums = new ArrayList<>();
        for(int i = 1;i<=n;i++){
            nums.add(i);
        }
        Collections.sort(nums, comp);
        return nums;
    }
}